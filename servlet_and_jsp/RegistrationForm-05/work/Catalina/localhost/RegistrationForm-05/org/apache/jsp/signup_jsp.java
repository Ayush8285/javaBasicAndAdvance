/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2024-11-11 14:20:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<title></title>\r\n");
      out.write("\r\n");
      out.write("<!--using materialize css-->\r\n");
      out.write("<!-- Compiled and minified CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Compiled and minified JavaScript -->\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"background: url(img/first.jpg); background-size:cover; background-attachment:fixed\">\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col m6 offset-m3\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-content\">\r\n");
      out.write("                        <h3 style=\"margin-top:10px;\" class=\"center-align\"> Register here !!</h3>\r\n");
      out.write("                        <h5 id=\"msg\" class=\"center-align\"></h5>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"form center-align\">\r\n");
      out.write("                            <!--creating form-->\r\n");
      out.write("                            <form action=\"Register\" method=\"post\" id=\"myform\">\r\n");
      out.write("                                <input type=\"text\" name=\"user_name\" placeholder=\"Enter your name\">\r\n");
      out.write("                                <input type=\"password\" name=\"user_password\" placeholder=\"Enter your password\">\r\n");
      out.write("                                <input type=\"email\" name=\"user_email\" placeholder=\"Enter your email\">\r\n");
      out.write("\r\n");
      out.write("                                    <div class=\"file-field input-field\">\r\n");
      out.write("                                      <div class=\"btn\">\r\n");
      out.write("                                        <span>File</span>\r\n");
      out.write("                                        <input name=\"image\" type=\"file\">\r\n");
      out.write("                                      </div>\r\n");
      out.write("                                      <div class=\"file-path-wrapper\">\r\n");
      out.write("                                        <input class=\"file-path validate\" type=\"text\">\r\n");
      out.write("                                      </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("\r\n");
      out.write("                                <button type=\"submit\" class=\"btn light-blue lighten-2\">Submit</button>\r\n");
      out.write("                            </form>\r\n");
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"loader center-align \" style=\"margin-top:10px; display:none;\">\r\n");
      out.write("                            <div class=\"preloader-wrapper big active\">\r\n");
      out.write("                                 <div class=\"spinner-layer spinner-blue\">\r\n");
      out.write("                                   <div class=\"circle-clipper left\">\r\n");
      out.write("                                     <div class=\"circle\"></div>\r\n");
      out.write("                                   </div><div class=\"gap-patch\">\r\n");
      out.write("                                     <div class=\"circle\"></div>\r\n");
      out.write("                                   </div><div class=\"circle-clipper right\">\r\n");
      out.write("                                     <div class=\"circle\"></div>\r\n");
      out.write("                                   </div>\r\n");
      out.write("                                 </div>\r\n");
      out.write("\r\n");
      out.write("                                 <div class=\"spinner-layer spinner-red\">\r\n");
      out.write("                                   <div class=\"circle-clipper left\">\r\n");
      out.write("                                     <div class=\"circle\"></div>\r\n");
      out.write("                                   </div><div class=\"gap-patch\">\r\n");
      out.write("                                     <div class=\"circle\"></div>\r\n");
      out.write("                                   </div><div class=\"circle-clipper right\">\r\n");
      out.write("                                     <div class=\"circle\"></div>\r\n");
      out.write("                                   </div>\r\n");
      out.write("                                 </div>\r\n");
      out.write("\r\n");
      out.write("                                 <div class=\"spinner-layer spinner-yellow\">\r\n");
      out.write("                                   <div class=\"circle-clipper left\">\r\n");
      out.write("                                     <div class=\"circle\"></div>\r\n");
      out.write("                                   </div><div class=\"gap-patch\">\r\n");
      out.write("                                     <div class=\"circle\"></div>\r\n");
      out.write("                                   </div><div class=\"circle-clipper right\">\r\n");
      out.write("                                     <div class=\"circle\"></div>\r\n");
      out.write("                                   </div>\r\n");
      out.write("                                 </div>\r\n");
      out.write("\r\n");
      out.write("                                 <div class=\"spinner-layer spinner-green\">\r\n");
      out.write("                                   <div class=\"circle-clipper left\">\r\n");
      out.write("                                     <div class=\"circle\"></div>\r\n");
      out.write("                                   </div><div class=\"gap-patch\">\r\n");
      out.write("                                     <div class=\"circle\"></div>\r\n");
      out.write("                                   </div><div class=\"circle-clipper right\">\r\n");
      out.write("                                     <div class=\"circle\"></div>\r\n");
      out.write("                                   </div>\r\n");
      out.write("                                 </div>\r\n");
      out.write("                               </div>\r\n");
      out.write("                               <h5>Please wait...</h5>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script\r\n");
      out.write("      src=\"https://code.jquery.com/jquery-3.7.1.min.js\"\r\n");
      out.write("      integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\"\r\n");
      out.write("      crossorigin=\"anonymous\">\r\n");
      out.write("      </script>\r\n");
      out.write("      <script>\r\n");
      out.write("      $(document).ready(function () {\r\n");
      out.write("        console.log(\"page is ready.......\");\r\n");
      out.write("\r\n");
      out.write("        $(\"#myform\").on('submit',function(event){\r\n");
      out.write("        event.preventDefault();\r\n");
      out.write("\r\n");
      out.write("        <!-- var f = $(this).serialize(); -->\r\n");
      out.write("\r\n");
      out.write("        let f = new FormData(this);\r\n");
      out.write("        console.log(f);\r\n");
      out.write("\r\n");
      out.write("        $(\".loader\").show();\r\n");
      out.write("        $(\".form\").hide();\r\n");
      out.write("\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: \"Register\",\r\n");
      out.write("            data: f,\r\n");
      out.write("            type: 'POST',\r\n");
      out.write("            success: function(data, textStatus, jqXHR){\r\n");
      out.write("                console.log(data);\r\n");
      out.write("                console.log(\"success...\");\r\n");
      out.write("                $(\".loader\").hide();\r\n");
      out.write("                $(\".form\").show();\r\n");
      out.write("                if(data.trim() === 'done')\r\n");
      out.write("                {\r\n");
      out.write("                    $('#msg').html(\"Successfully Registered !!\")\r\n");
      out.write("                    $(\"#msg\").addClass('green-text')\r\n");
      out.write("                }else\r\n");
      out.write("                {\r\n");
      out.write("                    $('#msg').html(\"Something went wrong on server... !!\")\r\n");
      out.write("                    $(\"#msg\").addClass('red-text')\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            error: function (jqXHR, textStatus, errorThrown){\r\n");
      out.write("               console.log(data);\r\n");
      out.write("               console.log(\"error...\");\r\n");
      out.write("               $(\".loader\").hide();\r\n");
      out.write("               $(\".form\").show();\r\n");
      out.write("               $('#msg').html(\"Something went wrong on server... !!\")\r\n");
      out.write("               $(\"#msg\").addClass('red-text')\r\n");
      out.write("            },\r\n");
      out.write("            processData: false,\r\n");
      out.write("            contentType: false\r\n");
      out.write("        })\r\n");
      out.write("        })\r\n");
      out.write("      })\r\n");
      out.write("      </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
